{
  "name": "node-redis-pubsub",
  "version": "0.1.0",
  "author": {
    "name": "Louis Chatriot",
    "email": "louis.chatriot@gmail.com"
  },
  "contributors": [
    {
      "name": "Louis Chatriot"
    }
  ],
  "description": "Redis PubSub client for Node",
  "keywords": [
    "redis",
    "pubsub",
    "node",
    "simple"
  ],
  "homepage": "https://github.com/louischatriot/node-redis-pubsub",
  "dependencies": {
    "redis": "0.8.x"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/louischatriot/node-redis-pubsub"
  },
  "engines": {
    "node": "*"
  },
  "main": "index",
  "scripts": {
    "test": "make test"
  },
  "licence": "mit",
  "readme": "NRP (Node Redis Pubsub)\n=================\n\nSimple pubsub for node using Redis. Why use NRP instead of Node's EventEmitter? It is useful when\nyour Node application needs to share data with other applications. In that case EventEmitter will not\nhelp you, you need an external pubsub provider. Redis is pretty good at this, but its pubsub API\nis strange. So you use this wrapper.\n\n## Install and test\n```bash\n$ npm install node-redis-pubsub      # Install locally\n$ npm install -g node-redis-pubsub   # Install globally\n$ \n$ make test   # test (devDependencies need to be installed and a Redis server up)\n```\n\n## Usage\nFor now this only works in a trusted environment where Redis runs unprotected on a port blocked by firewall.\nThat's the case with most production setups.\n\n```javascript\nvar NRP = require('')\n  , config = { port: 6379       // Port of your locally running Redis server\n             , scope: 'demo'    // Use a scope to prevent two NRPs from sharing messages\n             }\n  , nrp = new NRP(config);      // This is the NRP client\n\n\n// Simple pubsub\nnrp.on('say hello', function (data) {\n  console.log('Hello ' + data.name);\n});\n\nnrp.emit('say hello', { name: 'Louis' });   // Outputs 'Hello Louis'\n\n\n// You can use patterns to capture all messages of a certain type\nnrp.on('city:*', function (data) {\n  console.log(data.city + ' is great');\n});\n\nnrp.emit('city:hello', { city: 'Paris' });   // Outputs 'Paris is great'\nnrp.emit('city:yeah', { city: 'San Francisco' });   // Outputs 'San Francisco is great'\n```\n\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2012 tldr.io &lt;hello@tldr.io&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "_id": "node-redis-pubsub@0.1.0",
  "dist": {
    "shasum": "89ca19d1744c9ea7f9747e6e498211bb18a98264"
  },
  "_from": "node-redis-pubsub"
}
